name: CI Pipeline

on:
  pull_request:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Restaurar pacotes
        run: dotnet restore PedidoMicroserviceTests/PedidoMicroserviceTests.csproj

      - name: Compilar aplicação
        run: dotnet build PedidoMicroserviceTests/PedidoMicroserviceTests.csproj --configuration Release --no-restore

      - name: Executar testes com cobertura
        run: dotnet test PedidoMicroserviceTests/PedidoMicroserviceTests.csproj --configuration Release --collect:"XPlat Code Coverage"

      - name: Garantir cobertura mínima de 70%
        run: |
          # Gerar o relatório de cobertura em formato Cobertura
          reportgenerator "-reports:TestResults/*/coverage.cobertura.xml" "-targetdir:coverage-report" -reporttypes:TextSummary

          # Extrair a cobertura de código do relatório
          COVERAGE=$(grep -oP 'Line coverage: \K[0-9.]+(?=%)' coverage-report/coverage-summary.txt)

          # Definir a cobertura mínima desejada
          MIN_COVERAGE=70.0

          # Comparar a cobertura atual com a mínima
          if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
            echo "Cobertura abaixo do mínimo exigido de 70% ($COVERAGE%)"
            exit 1
          fi
